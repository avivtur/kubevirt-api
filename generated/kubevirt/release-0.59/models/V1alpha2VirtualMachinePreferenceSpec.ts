/* tslint:disable */
/* eslint-disable */
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    V1alpha2CPUPreferences,
    V1alpha2CPUPreferencesFromJSON,
    V1alpha2CPUPreferencesFromJSONTyped,
    V1alpha2CPUPreferencesToJSON,
    V1alpha2ClockPreferences,
    V1alpha2ClockPreferencesFromJSON,
    V1alpha2ClockPreferencesFromJSONTyped,
    V1alpha2ClockPreferencesToJSON,
    V1alpha2DevicePreferences,
    V1alpha2DevicePreferencesFromJSON,
    V1alpha2DevicePreferencesFromJSONTyped,
    V1alpha2DevicePreferencesToJSON,
    V1alpha2FeaturePreferences,
    V1alpha2FeaturePreferencesFromJSON,
    V1alpha2FeaturePreferencesFromJSONTyped,
    V1alpha2FeaturePreferencesToJSON,
    V1alpha2FirmwarePreferences,
    V1alpha2FirmwarePreferencesFromJSON,
    V1alpha2FirmwarePreferencesFromJSONTyped,
    V1alpha2FirmwarePreferencesToJSON,
    V1alpha2MachinePreferences,
    V1alpha2MachinePreferencesFromJSON,
    V1alpha2MachinePreferencesFromJSONTyped,
    V1alpha2MachinePreferencesToJSON,
    V1alpha2VolumePreferences,
    V1alpha2VolumePreferencesFromJSON,
    V1alpha2VolumePreferencesFromJSONTyped,
    V1alpha2VolumePreferencesToJSON,
} from './';

/**
 * VirtualMachinePreferenceSpec is a description of the VirtualMachinePreference or VirtualMachineClusterPreference.
 * @export
 * @interface V1alpha2VirtualMachinePreferenceSpec
 */
export interface V1alpha2VirtualMachinePreferenceSpec {
    /**
     * 
     * @type {V1alpha2ClockPreferences}
     * @memberof V1alpha2VirtualMachinePreferenceSpec
     */
    clock?: V1alpha2ClockPreferences;
    /**
     * 
     * @type {V1alpha2CPUPreferences}
     * @memberof V1alpha2VirtualMachinePreferenceSpec
     */
    cpu?: V1alpha2CPUPreferences;
    /**
     * 
     * @type {V1alpha2DevicePreferences}
     * @memberof V1alpha2VirtualMachinePreferenceSpec
     */
    devices?: V1alpha2DevicePreferences;
    /**
     * 
     * @type {V1alpha2FeaturePreferences}
     * @memberof V1alpha2VirtualMachinePreferenceSpec
     */
    features?: V1alpha2FeaturePreferences;
    /**
     * 
     * @type {V1alpha2FirmwarePreferences}
     * @memberof V1alpha2VirtualMachinePreferenceSpec
     */
    firmware?: V1alpha2FirmwarePreferences;
    /**
     * 
     * @type {V1alpha2MachinePreferences}
     * @memberof V1alpha2VirtualMachinePreferenceSpec
     */
    machine?: V1alpha2MachinePreferences;
    /**
     * 
     * @type {V1alpha2VolumePreferences}
     * @memberof V1alpha2VirtualMachinePreferenceSpec
     */
    volumes?: V1alpha2VolumePreferences;
}

export function V1alpha2VirtualMachinePreferenceSpecFromJSON(json: any): V1alpha2VirtualMachinePreferenceSpec {
    return V1alpha2VirtualMachinePreferenceSpecFromJSONTyped(json, false);
}

export function V1alpha2VirtualMachinePreferenceSpecFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1alpha2VirtualMachinePreferenceSpec {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clock': !exists(json, 'clock') ? undefined : V1alpha2ClockPreferencesFromJSON(json['clock']),
        'cpu': !exists(json, 'cpu') ? undefined : V1alpha2CPUPreferencesFromJSON(json['cpu']),
        'devices': !exists(json, 'devices') ? undefined : V1alpha2DevicePreferencesFromJSON(json['devices']),
        'features': !exists(json, 'features') ? undefined : V1alpha2FeaturePreferencesFromJSON(json['features']),
        'firmware': !exists(json, 'firmware') ? undefined : V1alpha2FirmwarePreferencesFromJSON(json['firmware']),
        'machine': !exists(json, 'machine') ? undefined : V1alpha2MachinePreferencesFromJSON(json['machine']),
        'volumes': !exists(json, 'volumes') ? undefined : V1alpha2VolumePreferencesFromJSON(json['volumes']),
    };
}

export function V1alpha2VirtualMachinePreferenceSpecToJSON(value?: V1alpha2VirtualMachinePreferenceSpec | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'clock': V1alpha2ClockPreferencesToJSON(value.clock),
        'cpu': V1alpha2CPUPreferencesToJSON(value.cpu),
        'devices': V1alpha2DevicePreferencesToJSON(value.devices),
        'features': V1alpha2FeaturePreferencesToJSON(value.features),
        'firmware': V1alpha2FirmwarePreferencesToJSON(value.firmware),
        'machine': V1alpha2MachinePreferencesToJSON(value.machine),
        'volumes': V1alpha2VolumePreferencesToJSON(value.volumes),
    };
}

