/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { K8sIoApiCoreV1NodeSelectorRequirement } from './K8sIoApiCoreV1NodeSelectorRequirement';
import { HttpFile } from '../http/http';

/**
* A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
*/
export class K8sIoApiCoreV1NodeSelectorTerm {
    /**
    * A list of node selector requirements by node's labels.
    */
    'matchExpressions'?: Array<K8sIoApiCoreV1NodeSelectorRequirement>;
    /**
    * A list of node selector requirements by node's fields.
    */
    'matchFields'?: Array<K8sIoApiCoreV1NodeSelectorRequirement>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "matchExpressions",
            "baseName": "matchExpressions",
            "type": "Array<K8sIoApiCoreV1NodeSelectorRequirement>",
            "format": ""
        },
        {
            "name": "matchFields",
            "baseName": "matchFields",
            "type": "Array<K8sIoApiCoreV1NodeSelectorRequirement>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return K8sIoApiCoreV1NodeSelectorTerm.attributeTypeMap;
    }

    public constructor() {
    }
}

