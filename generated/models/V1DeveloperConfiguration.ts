/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1DiskVerification } from './V1DiskVerification';
import { V1LogVerbosity } from './V1LogVerbosity';
import { HttpFile } from '../http/http';

/**
* DeveloperConfiguration holds developer options
*/
export class V1DeveloperConfiguration {
    'cpuAllocationRatio'?: number;
    'diskVerification'?: V1DiskVerification;
    'featureGates'?: Array<string>;
    'logVerbosity'?: V1LogVerbosity;
    'memoryOvercommit'?: number;
    /**
    * Allow overriding the automatically determined minimum TSC frequency of the cluster and fixate the minimum to this frequency.
    */
    'minimumClusterTSCFrequency'?: number;
    'minimumReservePVCBytes'?: number;
    'nodeSelectors'?: { [key: string]: string; };
    'pvcTolerateLessSpaceUpToPercent'?: number;
    /**
    * UseEmulation can be set to true to allow fallback to software emulation in case hardware-assisted emulation is not available.
    */
    'useEmulation'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "cpuAllocationRatio",
            "baseName": "cpuAllocationRatio",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "diskVerification",
            "baseName": "diskVerification",
            "type": "V1DiskVerification",
            "format": ""
        },
        {
            "name": "featureGates",
            "baseName": "featureGates",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "logVerbosity",
            "baseName": "logVerbosity",
            "type": "V1LogVerbosity",
            "format": ""
        },
        {
            "name": "memoryOvercommit",
            "baseName": "memoryOvercommit",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "minimumClusterTSCFrequency",
            "baseName": "minimumClusterTSCFrequency",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "minimumReservePVCBytes",
            "baseName": "minimumReservePVCBytes",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "nodeSelectors",
            "baseName": "nodeSelectors",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "pvcTolerateLessSpaceUpToPercent",
            "baseName": "pvcTolerateLessSpaceUpToPercent",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "useEmulation",
            "baseName": "useEmulation",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1DeveloperConfiguration.attributeTypeMap;
    }

    public constructor() {
    }
}

