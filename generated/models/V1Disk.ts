/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1BlockSize } from './V1BlockSize';
import { V1CDRomTarget } from './V1CDRomTarget';
import { V1DiskTarget } from './V1DiskTarget';
import { V1FloppyTarget } from './V1FloppyTarget';
import { V1LunTarget } from './V1LunTarget';
import { HttpFile } from '../http/http';

export class V1Disk {
    'blockSize'?: V1BlockSize;
    /**
    * BootOrder is an integer value > 0, used to determine ordering of boot devices. Lower values take precedence. Each disk or interface that has a boot order must have a unique value. Disks without a boot order are not tried if a disk with a boot order exists.
    */
    'bootOrder'?: number;
    /**
    * Cache specifies which kvm disk cache mode should be used. Supported values are: CacheNone, CacheWriteThrough.
    */
    'cache'?: string;
    'cdrom'?: V1CDRomTarget;
    /**
    * dedicatedIOThread indicates this disk should have an exclusive IO Thread. Enabling this implies useIOThreads = true. Defaults to false.
    */
    'dedicatedIOThread'?: boolean;
    'disk'?: V1DiskTarget;
    'floppy'?: V1FloppyTarget;
    /**
    * IO specifies which QEMU disk IO mode should be used. Supported values are: native, default, threads.
    */
    'io'?: string;
    'lun'?: V1LunTarget;
    /**
    * Name is the device name
    */
    'name': string;
    /**
    * Serial provides the ability to specify a serial number for the disk device.
    */
    'serial'?: string;
    /**
    * If specified, disk address and its tag will be provided to the guest via config drive metadata
    */
    'tag'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "blockSize",
            "baseName": "blockSize",
            "type": "V1BlockSize",
            "format": ""
        },
        {
            "name": "bootOrder",
            "baseName": "bootOrder",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "cache",
            "baseName": "cache",
            "type": "string",
            "format": ""
        },
        {
            "name": "cdrom",
            "baseName": "cdrom",
            "type": "V1CDRomTarget",
            "format": ""
        },
        {
            "name": "dedicatedIOThread",
            "baseName": "dedicatedIOThread",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "disk",
            "baseName": "disk",
            "type": "V1DiskTarget",
            "format": ""
        },
        {
            "name": "floppy",
            "baseName": "floppy",
            "type": "V1FloppyTarget",
            "format": ""
        },
        {
            "name": "io",
            "baseName": "io",
            "type": "string",
            "format": ""
        },
        {
            "name": "lun",
            "baseName": "lun",
            "type": "V1LunTarget",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "serial",
            "baseName": "serial",
            "type": "string",
            "format": ""
        },
        {
            "name": "tag",
            "baseName": "tag",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1Disk.attributeTypeMap;
    }

    public constructor() {
    }
}

