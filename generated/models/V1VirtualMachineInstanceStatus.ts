/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1TopologyHints } from './V1TopologyHints';
import { V1VirtualMachineInstanceCondition } from './V1VirtualMachineInstanceCondition';
import { V1VirtualMachineInstanceGuestOSInfo } from './V1VirtualMachineInstanceGuestOSInfo';
import { V1VirtualMachineInstanceMigrationState } from './V1VirtualMachineInstanceMigrationState';
import { V1VirtualMachineInstanceNetworkInterface } from './V1VirtualMachineInstanceNetworkInterface';
import { V1VirtualMachineInstancePhaseTransitionTimestamp } from './V1VirtualMachineInstancePhaseTransitionTimestamp';
import { V1VolumeStatus } from './V1VolumeStatus';
import { HttpFile } from '../http/http';

/**
* VirtualMachineInstanceStatus represents information about the status of a VirtualMachineInstance. Status may trail the actual state of a system.
*/
export class V1VirtualMachineInstanceStatus {
    /**
    * ActivePods is a mapping of pod UID to node name. It is possible for multiple pods to be running for a single VMI during migration.
    */
    'activePods'?: { [key: string]: string; };
    /**
    * Conditions are specific points in VirtualMachineInstance's pod runtime.
    */
    'conditions'?: Array<V1VirtualMachineInstanceCondition>;
    /**
    * EvacuationNodeName is used to track the eviction process of a VMI. It stores the name of the node that we want to evacuate. It is meant to be used by KubeVirt core components only and can't be set or modified by users.
    */
    'evacuationNodeName'?: string;
    /**
    * FSFreezeStatus is the state of the fs of the guest it can be either frozen or thawed
    */
    'fsFreezeStatus'?: string;
    'guestOSInfo'?: V1VirtualMachineInstanceGuestOSInfo;
    /**
    * Interfaces represent the details of available network interfaces.
    */
    'interfaces'?: Array<V1VirtualMachineInstanceNetworkInterface>;
    /**
    * LauncherContainerImageVersion indicates what container image is currently active for the vmi.
    */
    'launcherContainerImageVersion'?: string;
    /**
    * Represents the method using which the vmi can be migrated: live migration or block migration
    */
    'migrationMethod'?: string;
    'migrationState'?: V1VirtualMachineInstanceMigrationState;
    /**
    * This represents the migration transport
    */
    'migrationTransport'?: string;
    /**
    * NodeName is the name where the VirtualMachineInstance is currently running.
    */
    'nodeName'?: string;
    /**
    * Phase is the status of the VirtualMachineInstance in kubernetes world. It is not the VirtualMachineInstance status, but partially correlates to it.
    */
    'phase'?: string;
    /**
    * PhaseTransitionTimestamp is the timestamp of when the last phase change occurred
    */
    'phaseTransitionTimestamps'?: Array<V1VirtualMachineInstancePhaseTransitionTimestamp>;
    /**
    * The Quality of Service (QOS) classification assigned to the virtual machine instance based on resource requirements See PodQOSClass type for available QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
    */
    'qosClass'?: string;
    /**
    * A brief CamelCase message indicating details about why the VMI is in this state. e.g. 'NodeUnresponsive'
    */
    'reason'?: string;
    'topologyHints'?: V1TopologyHints;
    /**
    * VirtualMachineRevisionName is used to get the vm revision of the vmi when doing an online vm snapshot
    */
    'virtualMachineRevisionName'?: string;
    /**
    * VolumeStatus contains the statuses of all the volumes
    */
    'volumeStatus'?: Array<V1VolumeStatus>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "activePods",
            "baseName": "activePods",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<V1VirtualMachineInstanceCondition>",
            "format": ""
        },
        {
            "name": "evacuationNodeName",
            "baseName": "evacuationNodeName",
            "type": "string",
            "format": ""
        },
        {
            "name": "fsFreezeStatus",
            "baseName": "fsFreezeStatus",
            "type": "string",
            "format": ""
        },
        {
            "name": "guestOSInfo",
            "baseName": "guestOSInfo",
            "type": "V1VirtualMachineInstanceGuestOSInfo",
            "format": ""
        },
        {
            "name": "interfaces",
            "baseName": "interfaces",
            "type": "Array<V1VirtualMachineInstanceNetworkInterface>",
            "format": ""
        },
        {
            "name": "launcherContainerImageVersion",
            "baseName": "launcherContainerImageVersion",
            "type": "string",
            "format": ""
        },
        {
            "name": "migrationMethod",
            "baseName": "migrationMethod",
            "type": "string",
            "format": ""
        },
        {
            "name": "migrationState",
            "baseName": "migrationState",
            "type": "V1VirtualMachineInstanceMigrationState",
            "format": ""
        },
        {
            "name": "migrationTransport",
            "baseName": "migrationTransport",
            "type": "string",
            "format": ""
        },
        {
            "name": "nodeName",
            "baseName": "nodeName",
            "type": "string",
            "format": ""
        },
        {
            "name": "phase",
            "baseName": "phase",
            "type": "string",
            "format": ""
        },
        {
            "name": "phaseTransitionTimestamps",
            "baseName": "phaseTransitionTimestamps",
            "type": "Array<V1VirtualMachineInstancePhaseTransitionTimestamp>",
            "format": ""
        },
        {
            "name": "qosClass",
            "baseName": "qosClass",
            "type": "string",
            "format": ""
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string",
            "format": ""
        },
        {
            "name": "topologyHints",
            "baseName": "topologyHints",
            "type": "V1TopologyHints",
            "format": ""
        },
        {
            "name": "virtualMachineRevisionName",
            "baseName": "virtualMachineRevisionName",
            "type": "string",
            "format": ""
        },
        {
            "name": "volumeStatus",
            "baseName": "volumeStatus",
            "type": "Array<V1VolumeStatus>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1VirtualMachineInstanceStatus.attributeTypeMap;
    }

    public constructor() {
    }
}

