/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1VirtualMachineCondition } from './V1VirtualMachineCondition';
import { V1VirtualMachineStartFailure } from './V1VirtualMachineStartFailure';
import { V1VirtualMachineStateChangeRequest } from './V1VirtualMachineStateChangeRequest';
import { V1VirtualMachineVolumeRequest } from './V1VirtualMachineVolumeRequest';
import { V1VolumeSnapshotStatus } from './V1VolumeSnapshotStatus';
import { HttpFile } from '../http/http';

/**
* VirtualMachineStatus represents the status returned by the controller to describe how the VirtualMachine is doing
*/
export class V1VirtualMachineStatus {
    /**
    * Hold the state information of the VirtualMachine and its VirtualMachineInstance
    */
    'conditions'?: Array<V1VirtualMachineCondition>;
    /**
    * Created indicates if the virtual machine is created in the cluster
    */
    'created'?: boolean;
    /**
    * PrintableStatus is a human readable, high-level representation of the status of the virtual machine
    */
    'printableStatus'?: string;
    /**
    * Ready indicates if the virtual machine is running and ready
    */
    'ready'?: boolean;
    /**
    * RestoreInProgress is the name of the VirtualMachineRestore currently executing
    */
    'restoreInProgress'?: string;
    /**
    * SnapshotInProgress is the name of the VirtualMachineSnapshot currently executing
    */
    'snapshotInProgress'?: string;
    'startFailure'?: V1VirtualMachineStartFailure;
    /**
    * StateChangeRequests indicates a list of actions that should be taken on a VMI e.g. stop a specific VMI then start a new one.
    */
    'stateChangeRequests'?: Array<V1VirtualMachineStateChangeRequest>;
    /**
    * VolumeRequests indicates a list of volumes add or remove from the VMI template and hotplug on an active running VMI.
    */
    'volumeRequests'?: Array<V1VirtualMachineVolumeRequest>;
    /**
    * VolumeSnapshotStatuses indicates a list of statuses whether snapshotting is supported by each volume.
    */
    'volumeSnapshotStatuses'?: Array<V1VolumeSnapshotStatus>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<V1VirtualMachineCondition>",
            "format": ""
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "printableStatus",
            "baseName": "printableStatus",
            "type": "string",
            "format": ""
        },
        {
            "name": "ready",
            "baseName": "ready",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "restoreInProgress",
            "baseName": "restoreInProgress",
            "type": "string",
            "format": ""
        },
        {
            "name": "snapshotInProgress",
            "baseName": "snapshotInProgress",
            "type": "string",
            "format": ""
        },
        {
            "name": "startFailure",
            "baseName": "startFailure",
            "type": "V1VirtualMachineStartFailure",
            "format": ""
        },
        {
            "name": "stateChangeRequests",
            "baseName": "stateChangeRequests",
            "type": "Array<V1VirtualMachineStateChangeRequest>",
            "format": ""
        },
        {
            "name": "volumeRequests",
            "baseName": "volumeRequests",
            "type": "Array<V1VirtualMachineVolumeRequest>",
            "format": ""
        },
        {
            "name": "volumeSnapshotStatuses",
            "baseName": "volumeSnapshotStatuses",
            "type": "Array<V1VolumeSnapshotStatus>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1VirtualMachineStatus.attributeTypeMap;
    }

    public constructor() {
    }
}

