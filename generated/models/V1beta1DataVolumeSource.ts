/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1beta1DataVolumeSourceHTTP } from './V1beta1DataVolumeSourceHTTP';
import { V1beta1DataVolumeSourceImageIO } from './V1beta1DataVolumeSourceImageIO';
import { V1beta1DataVolumeSourcePVC } from './V1beta1DataVolumeSourcePVC';
import { V1beta1DataVolumeSourceRegistry } from './V1beta1DataVolumeSourceRegistry';
import { V1beta1DataVolumeSourceS3 } from './V1beta1DataVolumeSourceS3';
import { V1beta1DataVolumeSourceVDDK } from './V1beta1DataVolumeSourceVDDK';
import { HttpFile } from '../http/http';

/**
* DataVolumeSource represents the source for our Data Volume, this can be HTTP, Imageio, S3, Registry or an existing PVC
*/
export class V1beta1DataVolumeSource {
    /**
    * DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC
    */
    'blank'?: any;
    'http'?: V1beta1DataVolumeSourceHTTP;
    'imageio'?: V1beta1DataVolumeSourceImageIO;
    'pvc'?: V1beta1DataVolumeSourcePVC;
    'registry'?: V1beta1DataVolumeSourceRegistry;
    's3'?: V1beta1DataVolumeSourceS3;
    /**
    * DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source
    */
    'upload'?: any;
    'vddk'?: V1beta1DataVolumeSourceVDDK;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "blank",
            "baseName": "blank",
            "type": "any",
            "format": ""
        },
        {
            "name": "http",
            "baseName": "http",
            "type": "V1beta1DataVolumeSourceHTTP",
            "format": ""
        },
        {
            "name": "imageio",
            "baseName": "imageio",
            "type": "V1beta1DataVolumeSourceImageIO",
            "format": ""
        },
        {
            "name": "pvc",
            "baseName": "pvc",
            "type": "V1beta1DataVolumeSourcePVC",
            "format": ""
        },
        {
            "name": "registry",
            "baseName": "registry",
            "type": "V1beta1DataVolumeSourceRegistry",
            "format": ""
        },
        {
            "name": "s3",
            "baseName": "s3",
            "type": "V1beta1DataVolumeSourceS3",
            "format": ""
        },
        {
            "name": "upload",
            "baseName": "upload",
            "type": "any",
            "format": ""
        },
        {
            "name": "vddk",
            "baseName": "vddk",
            "type": "V1beta1DataVolumeSourceVDDK",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return V1beta1DataVolumeSource.attributeTypeMap;
    }

    public constructor() {
    }
}

